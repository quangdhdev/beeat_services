name: Build and Deploy to Docker Hub

on:
  push:
    branches:
      - main

env:
  REGISTRY: docker.io
  NODE_VERSION: '20'

jobs:
  detect-changes:
    name: Detect Changed Projects
    runs-on: ubuntu-latest
    outputs:
      api-affected: ${{ steps.affected.outputs.api-affected }}
      demoqafe-affected: ${{ steps.affected.outputs.demoqafe-affected }}
      adminfe-affected: ${{ steps.affected.outputs.adminfe-affected }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Check affected projects
        id: affected
        run: |
          # Set base reference for comparison
          BASE_REF="HEAD~1"
          echo "Checking affected projects against base: $BASE_REF"
          # Check if @apps/apis is affected
          if npx nx show projects --affected --base=$BASE_REF | grep -q "@beeat-be/apis"; then
            echo "api-affected=true" >> $GITHUB_OUTPUT
            echo "API project is affected"
          else
            echo "api-affected=false" >> $GITHUB_OUTPUT
            echo "API project is not affected"
          fi

          # Check if @apps/demoqa_fe is affected
          if npx nx show projects --affected --base=$BASE_REF | grep -q "@apps/demoqa_fe"; then
            echo "demoqafe-affected=true" >> $GITHUB_OUTPUT
            echo "DemoQA FE project is affected"
          else
            echo "demoqafe-affected=false" >> $GITHUB_OUTPUT
            echo "DemoQA FE project is not affected"
          fi

          # Check if @apps/admin-fe is affected
          if npx nx show projects --affected --base=$BASE_REF | grep -q "@apps/admin-fe"; then
            echo "adminfe-affected=true" >> $GITHUB_OUTPUT
            echo "Admin FE project is affected"
          else
            echo "adminfe-affected=false" >> $GITHUB_OUTPUT
            echo "Admin FE project is not affected"
          fi

          # Check if @apps/main-app-fe is affected
          if npx nx show projects --affected --base=$BASE_REF | grep -q "@apps/main-app-fe"; then
            echo "mainappfe-affected=true" >> $GITHUB_OUTPUT
            echo "Main App FE project is affected"
          else
            echo "mainappfe-affected=false" >> $GITHUB_OUTPUT
            echo "Main App FE project is not affected"
          fi

  build-and-deploy-api:
    name: Build API and Deploy Docker Image
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.api-affected == 'true'
    outputs:
      image-digest: ${{ steps.build-docker.outputs.digest }}
      image-uri: ${{ steps.build-docker.outputs.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Generate Prisma client
        run: npx prisma generate --schema=packages/prisma/scheams/schema.prisma

      - name: Build application
        run: npx nx build @beeat-be/apis --prod

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        id: build-docker
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/apis/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: quangdh/beeat-front-api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production
          # Enable BuildKit for better caching
          builder: ${{ steps.buildx.outputs.name }}
          provenance: false
          sbom: false

  build-and-deploy-demoqa-fe:
    name: Build DemoQA FE and Deploy to Cloudflare Pages
    needs: detect-changes
    runs-on: ubuntu-latest
    if: needs.detect-changes.outputs.demoqafe-affected == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build project
        run: npx nx build @apps/demoqa_fe

      - name: Export static files
        run: npx nx export @apps/demoqa_fe

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy apps/demoqa_fe/out --project-name=beeat-demoqa-fe
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  build-and-deploy-admin-fe:
    name: Build Admin FE and Deploy to Cloudflare Pages
    needs: detect-changes
    runs-on: ubuntu-latest
    if: needs.detect-changes.outputs.adminfe-affected == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Create .env file
        run: |
          echo "VITE_SUPABASE_URL=${{ vars.VITE_SUPABASE_URL }}" >> .env
          echo "VITE_SUPABASE_ANON_KEY=${{ vars.VITE_SUPABASE_ANON_KEY }}" >> .env
          echo "VITE_API_BASE_URL=${{ vars.VITE_API_BASE_URL }}" >> .env

      - name: Build project
        run: npx nx build @apps/admin-fe
        env:
          NODE_ENV: production

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy apps/admin-fe/dist --project-name=beeat-console
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  build-and-deploy-main-app-fe:
    name: Build Main App FE and Deploy to Cloudflare Pages
    needs: detect-changes
    runs-on: ubuntu-latest
    if: needs.detect-changes.outputs.mainappfe-affected == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Create .env file
        run: |
          echo "VITE_SUPABASE_URL=${{ vars.VITE_SUPABASE_URL }}" >> .env
          echo "VITE_SUPABASE_ANON_KEY=${{ vars.VITE_SUPABASE_ANON_KEY }}" >> .env
          echo "VITE_API_BASE_URL=${{ vars.VITE_API_BASE_URL }}" >> .env

      - name: Build project
        run: npx nx build @apps/main-app-fe
        env:
          NODE_ENV: production

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy apps/main-app-fe/dist --project-name=beeat-main-app
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}